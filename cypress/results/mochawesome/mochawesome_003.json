{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-02-01T01:41:24.929Z",
    "end": "2024-02-01T01:41:38.598Z",
    "duration": 13669,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "661347fe-c863-4e7e-a387-d943cb23d3d6",
      "title": "",
      "fullFile": "cypress\\e2e\\Automation-test-store\\alias.invoke.js",
      "file": "cypress\\e2e\\Automation-test-store\\alias.invoke.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "95872eba-869e-4cbb-8977-6d299e1dda69",
          "title": "alisas.invoke",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate A SPECIFIC HAIR CAIR PRODUCT",
              "fullTitle": "alisas.invoke Validate A SPECIFIC HAIR CAIR PRODUCT",
              "timedOut": null,
              "duration": 7452,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"a[href*='product/category&path=']\").contains(\"Hair Care\").click();\n// Gets the list of the products and then extracts(invokes the method to get the text) the text and stores it in the 'productThumbnail' Using Alias is a shorter way to write it then the beforeEach method. We do not need to keep getting and invoking the text and validating it\ncy.get('.fixed_wrapper .prdocutname').eq(0).invoke('text').as('productThumbnail');\ncy.get('@productThumbnail').its('length').should('be.gt', 18);\ncy.get('@productThumbnail').should('include', 'Seaweed Conditioner');",
              "err": {},
              "uuid": "016f53ad-064e-4905-a3a0-6a8c6e503ae9",
              "parentUUID": "95872eba-869e-4cbb-8977-6d299e1dda69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate the number of products on the homepage",
              "fullTitle": "alisas.invoke Validate the number of products on the homepage",
              "timedOut": null,
              "duration": 1936,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get('.thumbnail ').as('thumbnails');\n// Grab the all of the thumbnails and within the thumbnails, find the price tags so that the prices can be iterated, and not the thumbnails.\n// cy.get('@thumbnails').find('.oneprice').each(($el, index, $list) => {\n//     cy.log($el.text());\n//     })\n// Get the regular prices from the thumbnails and invoke the text command to store the text in the itemPrice property\ncy.get('@thumbnails').find('.oneprice').invoke('text').as('itemPrice');\ncy.get('@thumbnails').find('.pricenew').invoke('text').as('saleItemPrice');\n// The price texts will be going into a for loop to check all of the prices\nvar itemsPrice = 0;\ncy.get('@itemPrice').then($linkText => {\n  // Need to get all of the normal prices first and add them to the itemTotalPrice variable \n  var itemTotalPrice = 0;\n  // Spliting allows us to remove the dollar sign and keep the rest of the numbers \n  var itemPrice = $linkText.split('$');\n  var i;\n  for (i = 0; i < itemPrice.length; i++) {\n    cy.log(itemPrice[i]);\n    // As it loops around, the texts are being converted to numbers and added to the itemTotalPrice variable\n    itemTotalPrice += Number(itemPrice[i]);\n  }\n  // The itemTotalPrice variable will then be added to the global variable which is itemsPrice\n  itemsPrice += itemTotalPrice;\n  cy.log('Total price of the non-sale items: ' + itemTotalPrice);\n});\n// Same process as above but this time with sale items \ncy.get('@saleItemPrice').then($linkText => {\n  var saleItemTotalPrice = 0;\n  var saleItemPrice = $linkText.split('$');\n  var i;\n  for (i = 0; i < saleItemPrice.length; i++) {\n    saleItemTotalPrice += Number(saleItemPrice[i]);\n    cy.log(saleItemPrice[i]);\n  }\n  // Add the sale items to the global variable \n  itemsPrice += saleItemTotalPrice;\n  cy.log('Total price of the sale items: ' + saleItemTotalPrice);\n}).then(() => {\n  // Log the prices for all of the normal and sale items \n  cy.log('Total price of the all products: ' + itemsPrice);\n  expect(itemsPrice).to.equal(itemsPrice);\n});",
              "err": {},
              "uuid": "c2824d50-a920-459c-8f2b-acf09e392520",
              "parentUUID": "95872eba-869e-4cbb-8977-6d299e1dda69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "016f53ad-064e-4905-a3a0-6a8c6e503ae9",
            "c2824d50-a920-459c-8f2b-acf09e392520"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9388,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}